name: build

on:
  push:
    branches: [ main ]

jobs:

  vet-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.18]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Vet backend
        run: go vet --all .

      - name: Test backend
        run: go test -v -race .

  fuzzing:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.18]
        fuzz-function: [FuzzMap, FuzzSyncMap]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: OneMinuteFuzz
        run: go test -fuzz=${{ matrix.fuzz-function }} -fuzztime=1m .

  code-coverage:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.18]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Run coverage
        run: go test -race -coverprofile=coverage.out -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
